CREATE DATABASE IF NOT EXISTS supply_chain;
USE supply_chain;

CREATE TABLE suppliers (
    supplier_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    contact_email VARCHAR(100),
    phone VARCHAR(20),
    lead_time_days INT DEFAULT 7
);

CREATE TABLE inventory (
    inventory_id INT AUTO_INCREMENT PRIMARY KEY,
    sku VARCHAR(50) NOT NULL,
    supplier_id INT,
    quantity INT DEFAULT 0,
    reorder_threshold INT DEFAULT 10,
    reorder_quantity INT DEFAULT 50,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

CREATE TABLE purchase_orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    supplier_id INT,
    sku VARCHAR(50),
    quantity INT,
    status ENUM('created','sent','received','cancelled') DEFAULT 'created',
    expected_delivery DATE,
    FOREIGN KEY (supplier_id) REFERENCES suppliers(supplier_id)
);

INSERT INTO suppliers (name, contact_email, phone, lead_time_days) VALUES
('Acme Supplies', 'acme@supply.com', '9876543210', 10),
('Global Traders', 'global@supply.com', '8765432109', 7);

INSERT INTO inventory (sku, supplier_id, quantity, reorder_threshold, reorder_quantity) VALUES
('SKU1001', 1, 8, 10, 50),
('SKU1002', 2, 20, 15, 40);


SELECT * FROM inventory;

UPDATE inventory SET quantity = quantity + 30 WHERE sku = 'SKU1001';

DELETE FROM inventory WHERE sku = 'SKU1002';

DELIMITER $$
CREATE PROCEDURE sp_create_reorder(IN p_sku VARCHAR(50))
BEGIN
  DECLARE supp INT;
  DECLARE qty INT;
  DECLARE reorder_qty INT;
  DECLARE exp_date DATE;

  SELECT supplier_id, reorder_quantity INTO supp, reorder_qty
  FROM inventory WHERE sku = p_sku LIMIT 1;

  SET exp_date = DATE_ADD(CURDATE(), INTERVAL 7 DAY);

  INSERT INTO purchase_orders (supplier_id, sku, quantity, expected_delivery)
  VALUES (supp, p_sku, reorder_qty, exp_date);
END $$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_reorder AFTER UPDATE ON inventory
FOR EACH ROW
BEGIN
  IF NEW.quantity <= NEW.reorder_threshold THEN
    CALL sp_create_reorder(NEW.sku);
  END IF;
END$$
DELIMITER ;
